---

# Usage:
#
# docker run --rm alpine sh -c "printf '0x'; head -c32 /dev/urandom | xxd -p -c 64" > .jwtsecret
#
# cat .env
# ...
# IP=$(curl ipinfo.io/ip)
# COMPOSE_FILE=base.yml:rpc.yml:ronin/ronin/ronin-mainnet-ronin-archive-leveldb-hash.yml
#
# docker compose up -d

services:
  ronin-mainnet-archive:
    image: ${RONIN_RONIN_IMAGE:-ghcr.io/ronin-chain/ronin}:${RONIN_MAINNET_RONIN_VERSION:-v1.0.2-eaef5a2}
    sysctls:
      # TCP Performance
      net.ipv4.tcp_slow_start_after_idle: 0       # Disable slow start after idle
      net.ipv4.tcp_no_metrics_save: 1             # Disable metrics cache
      net.ipv4.tcp_rmem: 4096 87380 16777216      # Increase TCP read buffers
      net.ipv4.tcp_wmem: 4096 87380 16777216      # Increase TCP write buffers
      net.core.somaxconn: 32768                   # Higher connection queue
      # Memory/Connection Management
      # net.core.netdev_max_backlog: 50000          # Increase network buffer
      net.ipv4.tcp_max_syn_backlog: 30000         # More SYN requests
      net.ipv4.tcp_max_tw_buckets: 2000000        # Allow more TIME_WAIT sockets
    ulimits:
      nofile: 1048576    # Max open files (for RPC/WS connections)
    user: root
    ports:
      - 12931:12931
      - 12931:12931/udp
    expose:
      - 8545
    environment:
      - DB_ENGINE=leveldb
      - ETHSTATS_ENDPOINT=d${DOMAIN}:WSyDMrhRBe111@ronin-stats-ws.roninchain.com:443
      - MINE=false
      - NETWORK_ID=2020
      - NETWORK_PORT=12931
      - PASSWORD=stupidpassword
      - STATE_SCHEME=hash
      - SYNC_MODE=full
      - VERBOSITY=3
      - WS_PORT=8545
    command:
      - --discovery.dns=enrtree://AKUEZKN7PSKVNR65FZDHECMKOJQSGPARGTPPBI7WS2VUL4EGR6XPC@pos.roninchain.com
      - --gcmode=archive
      - --http.api=admin,eth,net,web3,consortium,txpool,debug
      - --nat=extip:${IP}
      - --port=12931
      - --txpool.nolocals
      - --txpool.pricelimit=20000000000
    restart: unless-stopped
    stop_grace_period: 5m
    networks:
      - chains
    volumes:
      - ${RONIN_MAINNET_RONIN_ARCHIVE_LEVELDB_HASH_DATA:-ronin-mainnet-ronin-archive-leveldb-hash}:/ronin
      - /slowdisk:/slowdisk
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.ronin-mainnet-ronin-archive-leveldb-hash-stripprefix.stripprefix.prefixes=/ronin-mainnet-archive
      - traefik.http.services.ronin-mainnet-ronin-archive-leveldb-hash.loadbalancer.server.port=8545
      - ${NO_SSL:-traefik.http.routers.ronin-mainnet-ronin-archive-leveldb-hash.entrypoints=websecure}
      - ${NO_SSL:-traefik.http.routers.ronin-mainnet-ronin-archive-leveldb-hash.tls.certresolver=myresolver}
      - ${NO_SSL:-traefik.http.routers.ronin-mainnet-ronin-archive-leveldb-hash.rule=Host(`$DOMAIN`) && (Path(`/ronin-mainnet-archive`) || Path(`/ronin-mainnet-archive/`))}
      - ${NO_SSL:+traefik.http.routers.ronin-mainnet-ronin-archive-leveldb-hash.rule=Path(`/ronin-mainnet-archive`) || Path(`/ronin-mainnet-archive/`)}
      - traefik.http.routers.ronin-mainnet-ronin-archive-leveldb-hash.middlewares=ronin-mainnet-ronin-archive-leveldb-hash-stripprefix, ipallowlist

volumes:
  ronin-mainnet-ronin-archive-leveldb-hash:

x-upstreams:
  - id: $${ID}
    labels:
      provider: $${PROVIDER}
    connection:
      generic:
        rpc:
          url: $${RPC_URL}
        ws:
          frameSize: 20Mb
          msgSize: 50Mb
          url: $${WS_URL}
    chain: ronin
    method-groups:
      enabled:
        - debug
        - filter
    methods:
      disabled:
      enabled:
        - name: txpool_content # TODO: should be disabled for rollup nodes
        # standard geth only
        - name: debug_getRawBlock
        - name: debug_getRawTransaction
        - name: debug_getRawReceipts
        - name: debug_getRawHeader
        - name: debug_getBadBlocks
        # non standard geth only slightly dangerous
        - name: debug_intermediateRoots
        - name: debug_dumpBlock
        # standard geth and erigon
        - name: debug_accountRange
        - name: debug_getModifiedAccountsByNumber
        - name: debug_getModifiedAccountsByHash
        # non standard geth and erigon
        - name: eth_getRawTransactionByHash
        - name: eth_getRawTransactionByBlockHashAndIndex
...