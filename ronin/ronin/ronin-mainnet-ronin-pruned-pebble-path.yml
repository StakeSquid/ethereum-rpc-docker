---

# Usage:
#
# .env
# IP=$(curl ipinfo.io/ip)
# COMPOSE_FILE=base.yml:rpc.yml:ronin/ronin/ronin-mainnet-ronin-pruned-pebble-path.yml
#
# docker compose up -d

services:
  ronin-mainnet:
    image: ${RONIN_RONIN_IMAGE:-ghcr.io/ronin-chain/ronin}:${RONIN_MAINNET_RONIN_VERSION:-v1.0.2-eaef5a2}
    sysctls:
      # TCP Performance
      net.ipv4.tcp_slow_start_after_idle: 0       # Disable slow start after idle
      net.ipv4.tcp_no_metrics_save: 1             # Disable metrics cache
      net.ipv4.tcp_rmem: 4096 87380 16777216      # Increase TCP read buffers
      net.ipv4.tcp_wmem: 4096 87380 16777216      # Increase TCP write buffers
      net.core.somaxconn: 32768                   # Higher connection queue
      # Memory/Connection Management
      # net.core.netdev_max_backlog: 50000          # Increase network buffer
      net.ipv4.tcp_max_syn_backlog: 30000         # More SYN requests
      net.ipv4.tcp_max_tw_buckets: 2000000        # Allow more TIME_WAIT sockets
    ulimits:
      nofile: 1048576    # Max open files (for RPC/WS connections)
    user: root
    ports:
      - 13967:13967
      - 13967:13967/udp
    expose:
      - 8545
    environment:
      - DB_ENGINE=pebble
      - ETHSTATS_ENDPOINT=d${DOMAIN}:WSyDMrhRBe111@ronin-stats-ws.roninchain.com:443
      - MINE=false
      - NETWORK_ID=2020
      - NETWORK_PORT=13967
      - PASSWORD=stupidpassword
      - STATE_SCHEME=path
      - SYNC_MODE=full
      - VERBOSITY=3
      - WS_PORT=8545
    command:
      - --discovery.dns=enrtree://AKUEZKN7PSKVNR65FZDHECMKOJQSGPARGTPPBI7WS2VUL4EGR6XPC@pos.roninchain.com
      - --gcmode=full
      - --http.api=admin,eth,net,web3,consortium,txpool,debug
      - --nat=extip:${IP}
      - --port=13967
      - --txpool.nolocals
      - --txpool.pricelimit=20000000000
    restart: unless-stopped
    stop_grace_period: 5m
    networks:
      - chains
    volumes:
      - ${RONIN_MAINNET_RONIN_PRUNED_PEBBLE_PATH_DATA:-ronin-mainnet-ronin-pruned-pebble-path}:/ronin
      - /slowdisk:/slowdisk
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.ronin-mainnet-ronin-pruned-pebble-path-stripprefix.stripprefix.prefixes=/ronin-mainnet
      - traefik.http.services.ronin-mainnet-ronin-pruned-pebble-path.loadbalancer.server.port=8545
      - ${NO_SSL:-traefik.http.routers.ronin-mainnet-ronin-pruned-pebble-path.entrypoints=websecure}
      - ${NO_SSL:-traefik.http.routers.ronin-mainnet-ronin-pruned-pebble-path.tls.certresolver=myresolver}
      - ${NO_SSL:-traefik.http.routers.ronin-mainnet-ronin-pruned-pebble-path.rule=Host(`$DOMAIN`) && (Path(`/ronin-mainnet`) || Path(`/ronin-mainnet/`))}
      - ${NO_SSL:+traefik.http.routers.ronin-mainnet-ronin-pruned-pebble-path.rule=Path(`/ronin-mainnet`) || Path(`/ronin-mainnet/`)}
      - traefik.http.routers.ronin-mainnet-ronin-pruned-pebble-path.middlewares=ronin-mainnet-ronin-pruned-pebble-path-stripprefix, ipallowlist

volumes:
  ronin-mainnet-ronin-pruned-pebble-path:

x-upstreams:
  - id: $${ID}
    labels:
      provider: $${PROVIDER}
    connection:
      generic:
        rpc:
          url: $${RPC_URL}
        ws:
          frameSize: 20Mb
          msgSize: 50Mb
          url: $${WS_URL}
    chain: ronin
    method-groups:
      enabled:
        - debug
        - filter
    methods:
      disabled:
        # not compatible with path state scheme
        - name: debug_traceBlockByHash
      enabled:
        - name: txpool_content # TODO: should be disabled for rollup nodes
        # standard geth only
        - name: debug_getRawBlock
        - name: debug_getRawTransaction
        - name: debug_getRawReceipts
        - name: debug_getRawHeader
        - name: debug_getBadBlocks
        # non standard geth only slightly dangerous
        - name: debug_intermediateRoots
        - name: debug_dumpBlock
        # standard geth and erigon
        - name: debug_accountRange
        - name: debug_getModifiedAccountsByNumber
        - name: debug_getModifiedAccountsByHash
        # non standard geth and erigon
        - name: eth_getRawTransactionByHash
        - name: eth_getRawTransactionByBlockHashAndIndex
...