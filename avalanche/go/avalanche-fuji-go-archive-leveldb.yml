---
# use at your own risk

services:
  avalanche-fuji-archive-client:
    image: ${AVALANCHE_GO_IMAGE:-avaplatform/avalanchego}:${AVALANCHE_FUJI_GO_VERSION:-v1.13.0-fuji}
    user: root
    ulimits:
      nofile: 1048576    # Max open files (for RPC/WS connections)
    sysctls:
      # TCP Performance
      net.ipv4.tcp_slow_start_after_idle: 0       # Disable slow start after idle
      net.ipv4.tcp_no_metrics_save: 1             # Disable metrics cache
      net.ipv4.tcp_rmem: 4096 87380 16777216      # Increase TCP read buffers
      net.ipv4.tcp_wmem: 4096 87380 16777216      # Increase TCP write buffers
      net.core.somaxconn: 32768                   # Higher connection queue
      # Memory/Connection Management
      # net.core.netdev_max_backlog: 50000          # Increase network buffer
      net.ipv4.tcp_max_syn_backlog: 30000         # More SYN requests
      net.ipv4.tcp_max_tw_buckets: 2000000        # Allow more TIME_WAIT sockets
    expose:
      - 9650
      - 9650
    ports:
      - 10350:10350
      - 10350:10350/udp
    volumes:
      - ${AVALANCHE_FUJI_GO_ARCHIVE_LEVELDB_DATA:-avalanche-fuji-go-archive-leveldb}:/root/.avalanchego
      - .//fuji:/config
      - /slowdisk:/slowdisk
    entrypoint: [/avalanchego/build/avalanchego]
    command:
      - --chain-config-dir /config/archive
      - --db-type=leveldb
      - --http-allowed-hosts=*
      - --http-host=
      - --public-ip=${IP}"
      - --staking-port=10350
    networks:
      - chains
    restart: unless-stopped
    stop_grace_period: 5m

  avalanche-fuji-archive:
    restart: unless-stopped
    image: nginx
    environment:
      PROXY_HOST: avalanche-fuji-archive-client
      RPC_PATH: /ext/bc/C/rpc
      RPC_PORT: 9650
      WS_PATH: /ext/bc/C/ws
      WS_PORT: 9650
    networks:
      - chains
    volumes:
      - ./nginx-proxy:/etc/nginx/templates
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.avalanche-fuji-go-archive-leveldb-stripprefix.stripprefix.prefixes=/avalanche-fuji-archive
      - traefik.http.services.avalanche-fuji-go-archive-leveldb.loadbalancer.server.port=80
      - ${NO_SSL:-traefik.http.routers.avalanche-fuji-go-archive-leveldb.entrypoints=websecure}
      - ${NO_SSL:-traefik.http.routers.avalanche-fuji-go-archive-leveldb.tls.certresolver=myresolver}
      - ${NO_SSL:-traefik.http.routers.avalanche-fuji-go-archive-leveldb.rule=Host(`$DOMAIN`) && PathPrefix(`/avalanche-fuji-archive`)}
      - ${NO_SSL:+traefik.http.routers.avalanche-fuji-go-archive-leveldb.rule=PathPrefix(`/avalanche-fuji-archive`)}
      - traefik.http.routers.avalanche-fuji-go-archive-leveldb.middlewares=avalanche-fuji-go-archive-leveldb-stripprefix, ipwhitelist

volumes:

  avalanche-fuji-go-archive-leveldb:

x-upstreams:

  - id: $${ID}
    labels:
      provider: $${PROVIDER}
    chain: avalanche
    method-groups:
      enabled:
        - debug
        - filter
    methods:
      disabled:
      enabled:
        - name: txpool_content # TODO: should be disabled for rollup nodes
...